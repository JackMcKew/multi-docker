name: Test & Deploy
on:
  push:
    branches:
      - master

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Latest Repo
        uses: actions/checkout@master

      - name: Build Dev Docker Image - Client
        run: docker build -t jackmckew/multi-docker-dev -f ./client/Dockerfile.dev ./client

      - name: Run Test Suite - Client
        run: docker run -e CI=true jackmckew/multi-docker-dev npm run test:unit

      # Deploy to Dockerhub
      - name: Build and Push Production Container - Client
        if: success()
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: jackmckew/multi-docker-client
          tags: latest
          path: ./client

      - name: Build and Push Production Container - Server
        if: success()
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: jackmckew/multi-docker-server
          tags: latest
          path: ./server

      - name: Build and Push Production Container - Nginx
        if: success()
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: jackmckew/multi-docker-nginx
          tags: latest
          path: ./nginx

      - name: Build and Push Production Container - Worker
        if: success()
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: jackmckew/multi-docker-worker
          tags: latest
          path: ./worker

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v11
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: mulit-docker
          environment_name: MulitDocker-env
          region: ap-southeast-2
          deployment_package: deploy.zip
